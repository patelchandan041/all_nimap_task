{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\portfolio\\\\src\\\\Page.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Pagination from \"@material-ui/core/TablePagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Page = () => {\n  _s();\n\n  const [post, setPost] = useState([]);\n  const [page, setPage] = useState();\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [dataCount, setDataCount] = useState(\"\");\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const PageAfterPagination = () => {\n    return post.slice(page * rowsPerPage, (page + 1) * rowsPerPage);\n  };\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/posts/').then(response => response.json()).then(json => setPost(json));\n  }, []);\n  console.log(post);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"grid\",\n      gridTemplateColumns: 'repeat(auto-fit, minmax(400px, 1fr))',\n      gridAutoFlow: 'row',\n      gap: '2rem',\n      justifyItems: 'center',\n      padding: '2rem',\n      width: '95%'\n    },\n    children: [dataCount && dataCount.length > 0 ? query(InDepthPlannerAfterPagination()).map((element, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n      children: [console.log(props), /*#__PURE__*/_jsxDEV(TableCell, {\n        className: classes.fontcolor,\n        children: element.topic_name ? /*#__PURE__*/_jsxDEV(\"a\", {\n          href: element.topic_url,\n          target: \"_blank\",\n          children: element.topic_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this) : element.topic_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), element.started_at ? /*#__PURE__*/_jsxDEV(TableCell, {\n        className: classes.fontcolor,\n        children: dateFormat(element.started_at, \"d mmm, yyyy\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(TableCell, {\n        className: classes.fontcolor,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 23\n      }, this), element.completed_at ? /*#__PURE__*/_jsxDEV(TableCell, {\n        className: classes.fontcolor,\n        children: dateFormat(element.completed_at, \"d mmm, yyyy\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(TableCell, {\n        className: classes.fontcolor,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 23\n      }, this), element.topic_file ? /*#__PURE__*/_jsxDEV(TableCell, {\n        className: classes.fontcolor,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: element.topic_file,\n          target: \"_blank\",\n          children: \"click here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(TableCell, {\n        className: classes.fontcolor,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        className: classes.fontcolor,\n        children: element.status_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this), element.subtopic.length > 0 ? /*#__PURE__*/_jsxDEV(TableCell, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: {\n            pathname: `/MentorSubtopics`,\n            state: {\n              user_technology_id: id,\n              state_id: state_id,\n              subtopic: element.subtopic\n            }\n          },\n          children: \"click here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(TableCell, {\n        className: classes.fontcolor,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.fontcolor,\n          style: {\n            marginLeft: \"-10px\"\n          },\n          onClick: () => openLogModal(element.id, element.user_id),\n          children: \"Open\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 19\n    }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No Data Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      rowsPerPageOptions: [10, 20, 50],\n      count: post.length,\n      component: \"div\" // rowsPerPageOptions={[5, 10, 15]}\n      // count={indepthplanner.length}\n      ,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onChangePage: handleChangePage,\n      onChangeRowsPerPage: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Page, \"06dtDELJEz7xULRqboQ8H5M1DT4=\");\n\n_c = Page;\nexport default Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"sources":["C:/Users/DELL/Desktop/portfolio/src/Page.js"],"names":["React","useEffect","useState","Pagination","Page","post","setPost","page","setPage","rowsPerPage","setRowsPerPage","dataCount","setDataCount","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","PageAfterPagination","slice","fetch","then","response","json","console","log","display","gridTemplateColumns","gridAutoFlow","gap","justifyItems","padding","width","length","query","InDepthPlannerAfterPagination","map","element","index","props","classes","fontcolor","topic_name","topic_url","started_at","dateFormat","completed_at","topic_file","status_name","subtopic","pathname","state","user_technology_id","id","state_id","marginLeft","openLogModal","user_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Pagination from \"@material-ui/core/TablePagination\"\r\n\r\nconst Page = () => {\r\n    const [post, setPost] = useState([])\r\n    const [page,setPage] = useState()\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n    const [dataCount, setDataCount] = useState(\"\");\r\n\r\n\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n      };\r\n    \r\n      const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n      };\r\n      const PageAfterPagination = () => {\r\n        return post.slice(page * rowsPerPage, (page + 1) * rowsPerPage);\r\n      };\r\n\r\n    useEffect(() => {\r\n        fetch('https://jsonplaceholder.typicode.com/posts/')\r\n            .then(response => response.json())\r\n            .then(json => setPost(json))\r\n\r\n    }, [])\r\n    console.log(post)\r\n    return (\r\n        <div style={{\r\n            display: \"grid\", gridTemplateColumns: 'repeat(auto-fit, minmax(400px, 1fr))',\r\n            gridAutoFlow: 'row', gap: '2rem', justifyItems: 'center'\r\n            , padding: '2rem',\r\n            width: '95%'\r\n        }}>\r\n           {dataCount && dataCount.length > 0 ? (\r\n                query(InDepthPlannerAfterPagination()).map((element, index) => (\r\n                  <TableRow key={index}>\r\n                    {console.log(props)}\r\n                    <TableCell className={classes.fontcolor}>\r\n                      {element.topic_name ? (\r\n                        <a href={element.topic_url} target=\"_blank\">\r\n                          {element.topic_name}\r\n                        </a>\r\n                      ) : (\r\n                        element.topic_name\r\n                      )}\r\n                    </TableCell>\r\n                    {element.started_at ? (\r\n                      <TableCell className={classes.fontcolor}>\r\n                        {dateFormat(element.started_at, \"d mmm, yyyy\")}\r\n                      </TableCell>\r\n                    ) : (\r\n                      <TableCell className={classes.fontcolor}>-</TableCell>\r\n                    )}\r\n                    {element.completed_at ? (\r\n                      <TableCell className={classes.fontcolor}>\r\n                        {dateFormat(element.completed_at, \"d mmm, yyyy\")}\r\n                      </TableCell>\r\n                    ) : (\r\n                      <TableCell className={classes.fontcolor}>-</TableCell>\r\n                    )}\r\n                    {/* {element.topic_url?<TableCell className={classes.fontcolor}><a href={element.topic_url} target=\"_blank\" >click here</a></TableCell> */}\r\n                    {/* : <TableCell className={classes.fontcolor} >-</TableCell>} */}\r\n                    {element.topic_file ? (\r\n                      <TableCell className={classes.fontcolor}>\r\n                        <a href={element.topic_file} target=\"_blank\">\r\n                          click here\r\n                        </a>\r\n                      </TableCell>\r\n                    ) : (\r\n                      <TableCell className={classes.fontcolor}>-</TableCell>\r\n                    )}\r\n                    {/* <TableCell >{element.is_completed==true?<BlackCheckbox checked={true}/>\r\n                                    :<BlackCheckbox checked={false}/>}</TableCell> */}\r\n                    <TableCell className={classes.fontcolor}>\r\n                      {element.status_name}\r\n                    </TableCell>\r\n                    {/* <TableCell >{element.is_reviewed==true?<BlackCheckbox checked={true}/>:<BlackCheckbox checked={false}/>}</TableCell> */}\r\n                    {/* <TableCell className={classes.fontcolor}><VisibilityOutlinedIcon onClick={()=>onView(\r\n                                        element.feedback )} fontSize='medium'/></TableCell>\r\n                                     */}\r\n                    {element.subtopic.length > 0 ? (\r\n                      <TableCell>\r\n                        <Link\r\n                          to={{\r\n                            pathname: `/MentorSubtopics`,\r\n                            state: {\r\n                              user_technology_id: id,\r\n                              state_id: state_id,\r\n                              subtopic: element.subtopic,\r\n                            },\r\n                          }}\r\n                        >\r\n                          click here\r\n                        </Link>{\" \"}\r\n                      </TableCell>\r\n                    ) : (\r\n                      <TableCell className={classes.fontcolor}>-</TableCell>\r\n                    )}\r\n\r\n                    <TableCell>\r\n                      <Button\r\n                        className={classes.fontcolor}\r\n                        style={{ marginLeft: \"-10px\" }}\r\n                        onClick={() =>\r\n                          openLogModal(element.id, element.user_id)\r\n                        }\r\n                      >\r\n                        Open\r\n                      </Button>\r\n                    </TableCell>\r\n                    {/* {user_permission_list.change_usertechnology === true ? \r\n                                   <TableCell className={classes.fontcolor}><btn className={classes.btnedit}\r\n                                 onClick={()=>{\r\n                                    setEditData({\r\n                                        \r\n                                        techid:element.id,\r\n                                        techname:element.name,\r\n                                        shortname:element.short_name,\r\n                                    });\r\n                                    onEdit()}} \r\n                                 >Edit</btn>\r\n                                 </TableCell>\r\n                                : \"\" } */}\r\n                  </TableRow>\r\n                ))\r\n              ) : (\r\n                <div>\r\n                  <p>No Data Found</p>\r\n                </div>\r\n              )}\r\n            \r\n            <Pagination\r\n                rowsPerPageOptions={[10, 20, 50]}\r\n                count={post.length} \r\n                component=\"div\"\r\n                // rowsPerPageOptions={[5, 10, 15]}\r\n                // count={indepthplanner.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Page;"]},"metadata":{},"sourceType":"module"}