{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\portfolio\\\\src\\\\Page.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { TablePagination } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Page = () => {\n  _s();\n\n  const [post, setPost] = useState([]);\n  const [page, setPage] = useState();\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [dataCount, setDataCount] = useState(\"\");\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const PageAfterPagination = () => {\n    return post.slice(page * rowsPerPage, (page + 1) * rowsPerPage);\n  };\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/posts/').then(response => response.json()).then(json => setPost(json));\n  }, []);\n  console.log(post);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"grid\",\n      gridTemplateColumns: 'repeat(auto-fit, minmax(400px, 1fr))',\n      gridAutoFlow: 'row',\n      gap: '2rem',\n      justifyItems: 'center',\n      padding: '2rem',\n      width: '95%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: post && post.length > 0 ? PageAfterPagination().map((element, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: element.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: element.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 22\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 20\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No data found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this), post && post.length > 0 ? /*#__PURE__*/_jsxDEV(TablePagination, {\n      component: \"div\",\n      rowsPerPageOptions: [5, 10, 50],\n      count: post.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onChangePage: handleChangePage,\n      onChangeRowsPerPage: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Page, \"06dtDELJEz7xULRqboQ8H5M1DT4=\");\n\n_c = Page;\nexport default Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"sources":["C:/Users/DELL/Desktop/portfolio/src/Page.js"],"names":["React","useEffect","useState","TablePagination","Page","post","setPost","page","setPage","rowsPerPage","setRowsPerPage","dataCount","setDataCount","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","PageAfterPagination","slice","fetch","then","response","json","console","log","display","gridTemplateColumns","gridAutoFlow","gap","justifyItems","padding","width","length","map","element","index","title","body"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {TablePagination} from \"@material-ui/core\"\r\n\r\nconst Page = () => {\r\n    const [post, setPost] = useState([])\r\n    const [page,setPage] = useState()\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n    const [dataCount, setDataCount] = useState(\"\");\r\n\r\n\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n      };\r\n    \r\n      const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n      };\r\n      const PageAfterPagination = () => {\r\n        return post.slice(page * rowsPerPage, (page + 1) * rowsPerPage);\r\n      };\r\n\r\n    useEffect(() => {\r\n        fetch('https://jsonplaceholder.typicode.com/posts/')\r\n            .then(response => response.json())\r\n            .then(json => setPost(json))\r\n\r\n    }, [])\r\n    console.log(post)\r\n    return (\r\n        <div style={{\r\n            display: \"grid\", gridTemplateColumns: 'repeat(auto-fit, minmax(400px, 1fr))',\r\n            gridAutoFlow: 'row', gap: '2rem', justifyItems: 'center'\r\n            , padding: '2rem',\r\n            width: '95%'\r\n        }}>\r\n          <div>\r\n           {post && post.length > 0 ? (\r\n              PageAfterPagination().map((element, index) => (\r\n                   <div key={index}>\r\n                     <p>{element.title}</p>\r\n                     <p>{element.body}</p>\r\n                   </div>\r\n                  ))\r\n            ) : (\r\n              <div>\r\n                <p>No data found</p>\r\n              </div>\r\n            )}\r\n            </div>\r\n           \r\n            \r\n          {post && post.length > 0 ? (\r\n            <TablePagination\r\n              component=\"div\"\r\n              rowsPerPageOptions={[5, 10, 50]}\r\n              count={post.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Page;"]},"metadata":{},"sourceType":"module"}