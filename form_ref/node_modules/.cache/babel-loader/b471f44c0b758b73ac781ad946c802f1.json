{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\portfolio\\\\src\\\\ContactUs.js\";\nimport React from 'react';\nimport { Formik, Form } from 'formik';\nimport { TextField } from './TextField';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactUs = () => {\n  const validate = Yup.object({\n    firstName: Yup.string().max(15, 'Must be 15 characters or less').required('Required'),\n    lastName: Yup.string().max(20, 'Must be 20 characters or less').required('Required'),\n    email: Yup.string().email('Email is invalid').required('Email is required'),\n    password: Yup.string().min(6, 'Password must be at least 6 charaters').required('Password is required'),\n    confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Password must match').required('Confirm password is required')\n  });\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    },\n    validationSchema: validate,\n    onSubmit: values => {\n      console.log(values);\n    },\n    children: formik => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"my-4 font-weight-bold .display-4\",\n        children: \"Contact Us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"First Name\",\n          name: \"firstName\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"last Name\",\n          name: \"lastName\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Email\",\n          name: \"email\",\n          type: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"password\",\n          name: \"password\",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Confirm Password\",\n          name: \"confirmPassword\",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-dark mt-3\",\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger mt-3 ml-3\",\n          type: \"reset\",\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ContactUs;\nexport default ContactUs;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactUs\");","map":{"version":3,"sources":["C:/Users/DELL/Desktop/portfolio/src/ContactUs.js"],"names":["React","Formik","Form","TextField","Yup","ContactUs","validate","object","firstName","string","max","required","lastName","email","password","min","confirmPassword","oneOf","ref","values","console","log","formik","display","alignItems"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport { TextField } from './TextField';\r\nimport * as Yup from 'yup';\r\n\r\nconst ContactUs = () => {\r\n  const validate = Yup.object({\r\n    firstName: Yup.string()\r\n      .max(15, 'Must be 15 characters or less')\r\n      .required('Required'),\r\n    lastName: Yup.string()\r\n      .max(20, 'Must be 20 characters or less')\r\n      .required('Required'),\r\n    email: Yup.string()\r\n      .email('Email is invalid')\r\n      .required('Email is required'),\r\n    password: Yup.string()\r\n      .min(6, 'Password must be at least 6 charaters')\r\n      .required('Password is required'),\r\n    confirmPassword: Yup.string()\r\n      .oneOf([Yup.ref('password'), null], 'Password must match')\r\n      .required('Confirm password is required'),\r\n  })\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n      }}\r\n      validationSchema={validate}\r\n      onSubmit={values => {\r\n        console.log(values)\r\n      }}\r\n    >\r\n      {formik => (\r\n        <div>\r\n          <h1 className=\"my-4 font-weight-bold .display-4\">Contact Us</h1>\r\n          <Form style={{display:\"flex\",alignItems:\"center\"}}>\r\n            <TextField label=\"First Name\" name=\"firstName\" type=\"text\" />\r\n            <TextField label=\"last Name\" name=\"lastName\" type=\"text\" />\r\n            <TextField label=\"Email\" name=\"email\" type=\"email\" />\r\n            <TextField label=\"password\" name=\"password\" type=\"password\" />\r\n            <TextField label=\"Confirm Password\" name=\"confirmPassword\" type=\"password\" />\r\n            <button className=\"btn btn-dark mt-3\" type=\"submit\">Register</button>\r\n            <button className=\"btn btn-danger mt-3 ml-3\" type=\"reset\">Reset</button>\r\n          </Form>\r\n        </div>\r\n      )}\r\n    </Formik>\r\n  )\r\n}\r\n\r\nexport default ContactUs"]},"metadata":{},"sourceType":"module"}